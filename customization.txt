- I had real fun this week making this project truly my own thank you

Total 14ish points



Instruction Button - 2 points
First change was I added an instruction button. It’s pretty simple the user can click it at any time and instructions about the game will appear 
as an alert. I felt that the alert was a very useful feature and as the user will not be reading this document for ages at a time but rather a quick skim
I felt the alert would be the most effective message to convey the information. I also felt it would be SUPER annoying for anyone who kept playing the game 
to be stuck reading the instructions when the game starts, furthermore I like referencing rules in the middle of game play, so the ease of a button felt right to me




StartNew Game button - 4 points
The Start new Game is a button at the bottom of the pane it triggers an alert.confirmation insuring that the user really does want to start a new game 
- I added the alert because resetting the game needed to be a twostep process - highly annoying to end the game half way through.
Upon selecting start new game it calls the private class StartNewGame - which does exactly as it says. I decided to reset the first player chooser which 
also allowed for changing computer strategies. I felt this was more in line with what a user expected. The opponent did default to the previous opponent 
and the names remained the same.

To minimize code lines a new Game() was created (taking the same players but not the original firstPlayer as once I just felt it be more useful for players to 
swap if they wanted too) and then invokes all the previous build panes to rebuild the stage - names and play styles of the players remain intact




Name Changes/design improvements - 2 points
The change name button allows the human player to change their name - it prompts an alert with a text box the user can fill to whatever they desire.
The second player (YES, I MADE IT ABLE TO HAVE TWO HUMANS) also prompts an alert which the user can fill to whatever they desire
All the Strategies change the name of the player to the strategy they reflect (cautious is still simple computer)
The names in FirstPersonChooserPane, ComputerPane, HumanPane and StatusPane are changed to reflect the newly selected names immediately upon selection

Once the game is started the Strategy and TwoPlayer menu options are disabled - users can still exit but they cannot change strategies in the middle of the 
game.




2nd Human Player - 4 points
I modified the computerPlayer to allow for a new StrategyManual - in effect creating a second human player by overriding the computerplayers pane. I decided
this was a better approach than redesigning the game to allow for potentially two humans. The StrategyManual forces the computer to roll once then send it back without 
ending the turn (calling swap or hold).

A third player pane was created Human2ndPane which allowed for the ComputerPlayer object but like HumanPane had two buttons to allow the second player to 
continue to roll and hold when they felt it was right. To Break the ComputerPlayer taketurn I added a second element to the PigStrategy. I foresaw no way to force the 
takeTurn method to allow for manual manipulation so I added a checkStrategyType which simply returns an int value one

What is so exciting about this is it allows for many different options in the future to -cheat- the automatic takeTurn if it is needed. Thus, when TakeTurn is called it rolls
dice, then checks strategy type if it is one it breaks the mold WITHOUT ending its turn allowing the user to do so if he desires. All the previous Strategies all return 0





Added Cheater strategy - 2 points
Using the checkStrategyType now implemented within all the PigStrategies I decided to create a cheater within their mist. This "Strategy" always returns 25 without fail and will win 
on its fourth turn. It completely changes the approach used to beat it.
 




